name: Create Release

on:
  release:
    types: [ published ]

env:
  ZIP_FILENAME: "swade_compendium_chn"
  PACKAGE_CONTENT: "module.json babele.js setup.js compendium/ lang/cn.json swade-core.css sytle/cnP.ttf"
  PACKAGE_ID: swade_compendium_chn


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{github.event.release.tag_name}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/${{env.ZIP_FILENAME}}.zip
        changelog: https://github.com/${{github.repository}}/releases/tag/${{github.event.release.tag_name}}

    # Rename and remove files
    - name: Tidy files
      id: tidy-files
      run: rm zh_Hans/___.json && mv zh_Hans compendium

    - name: Convert yml to json
      id: yml2json
      run: python utility/yml2json.py lang/cn.yml

    # Create a zip file with all files required by the module to add to the release
    - name: Create Artifact
      id: build-zip
      run: zip -r $ZIP_FILENAME.zip $PACKAGE_CONTENT

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: ${{ github.event.release.name }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./${{env.ZIP_FILENAME}}.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}

    - name: Publish to Foundry VTT Repo
      id: publish_foundry_repo
      if: ${{ env.PACKAGE_ID }}
      run: npx @ghost-fvtt/foundry-publish
      env:
        FVTT_MANIFEST_PATH: 'module.json'
        FVTT_PACKAGE_ID: ${{ env.PACKAGE_ID }}
        FVTT_USERNAME: ${{ secrets.FVTT_USERNAME }}
        FVTT_PASSWORD: ${{ secrets.FVTT_PASSWORD }}
